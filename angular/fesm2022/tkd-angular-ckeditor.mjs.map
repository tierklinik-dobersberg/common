{"version":3,"file":"tkd-angular-ckeditor.mjs","sources":["../../dev/components/ckeditor/ckeditor.config.ts","../../dev/components/ckeditor/tkd-angular-ckeditor.ts"],"sourcesContent":["//import { UserNamePipe } from '@tkd/angular';\nimport { USER_SERVICE } from '@tkd/angular/connect';\nimport { inject } from \"@angular/core\";\n\nexport function getCKEditorConfig(): any {\n    const idmService = inject(USER_SERVICE);\n    //const userNamePipe = inject(UserNamePipe)\n\n    return {\n        mention: {\n            feeds: [\n                {\n                    marker: '@',\n                    feed: (queryText: string) => {\n                        console.log(\"query-text for mention: \" + queryText);\n/*\n                        idmService\n                            .listUsers({\n                                fieldMask: {\n                                    paths: ['users.user.id', 'users.user.display_name', 'users.user.first_name']\n                                }\n                            })\n                            .then(response => response.users)\n                            .then(users => {\n                                return users.filter(profile => {\n                                    return profile.user?.username.toLowerCase().includes(queryText)\n                                        || profile.user?.firstName?.toLowerCase().includes(queryText)\n                                        || profile.user?.displayName?.toLowerCase().includes(queryText)\n                                })\n                            })\n                            .then(response => {\n                                return response\n                                    .map(profile => {\n                                        return {\n                                            id: '@' + profile!.user!.username,\n                                            userId: profile!.user!.id,\n                                            name: userNamePipe.transform(profile),\n                                        }\n                                    })\n                            })\n*/\n                    }\n                }\n            ]\n        }\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;AAAA;SAIgB,iBAAiB,GAAA;AAC7B,IAAA,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;;IAGxC,OAAO;AACH,QAAA,OAAO,EAAE;AACL,YAAA,KAAK,EAAE;AACH,gBAAA;AACI,oBAAA,MAAM,EAAE,GAAG;AACX,oBAAA,IAAI,EAAE,CAAC,SAAiB,KAAI;AACxB,wBAAA,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,SAAS,CAAC,CAAC;AAC5E;;;;;;;;;;;;;;;;;;;;;;;;;AAyBE;qBACmB;AACJ,iBAAA;AACJ,aAAA;AACJ,SAAA;KACJ,CAAA;AACL;;AC9CA;;AAEG;;;;"}