import { Duration as ProtoDuration } from '@bufbuild/protobuf';
export type DurationLayout = 'default-hours' | 'default' | 'hh:mm' | 'hh:mm:ss';
export declare class Duration {
    constructor(ns: number);
    toProto(): ProtoDuration;
    get nanoseconds(): number;
    get microseconds(): number;
    get milliseconds(): number;
    get seconds(): number;
    get minutes(): number;
    get hours(): number;
    static nanosecond: Duration;
    static microsecond: Duration;
    static millisecond: Duration;
    static second: Duration;
    static minute: Duration;
    static hour: Duration;
    private _nanoseconds;
    static nanoseconds(s: number): Duration;
    static microseconds(s: number): Duration;
    static milliseconds(s: number): Duration;
    static seconds(s: number): Duration;
    static minutes(s: number): Duration;
    static hours(s: number): Duration;
    addTo(d: Date): Date;
    format(layout?: DurationLayout): string;
    toString(skipDays?: boolean): string;
    static parseString(v: string): Duration;
    isLessThan(d: Duration): boolean;
    isGreatherThan(d: Duration): boolean;
    isEqual(d: Duration): boolean;
    valueOf(): number;
}
export declare function formatDate(d: Date | string | null, sep?: string): string;
